//get pateint iun server actions
// in new -apponimmnent 

import { Schedule } from "@mui/icons-material"

// gp to appointment form 
//  and make the chnages  
//  make the custom fields
  

//  below the custom form field anoher custom form field -> field type - form fieldtype.date_picker
//  name-> Schedule
//  label: expected appointment date_pickershowTimeSelevct
//  another div - class name flex flex-col gap-6
//  custom fiorm field -> reason

//  if cancel true -> another div

//  modify submit bution  -> custom label  : switch statement 
//  case-> cancel buttonLabel: cancek appoinrmtn


// appointment form validation
//in appointment form -> set the defauoltb values 

//--> ap[poinment ] CallToActionSharp.tsx
// all the collection ids

// go to validation -> getAppointmrnt 

---
sucess page 
 user id new app -> success page.tscx

 -- fetch informatioon of pointment  to be able to show them

 go to actions apoointmentactions export const getAppointment

 // /new-appointment/success?appointmentId=123&a 
 query paramters 

 what does asChild Mean

 ---
 otp verificatyion-> admin

 go to home page click on admin -> admin-> tru in serach paramters
 checlk if user wants to admin
  then show passkey model

  if isAdmin then render PassKeyMode;
  im  compoennts -> passeky miodel

  shadcn alert dialog
  AlertDialogHeader


  shadcn input otp


  ----impolimatent validate passkey function 

  prevent default begavout 
  


  -----
  admin dashboard

  Stat Card--> taht represnts data from backend 

  components-> StatCard
   props to pass _> type : oending , count , label ,icons
   StatCard
   {}
    optoiosn object  in clsx
clsx('stat-card',{
   'bg
})

-> appointments.actions.tsxexport const getRecentAppointments

try{
    const appointment=await databses.listDocuments(

    )

}
catch(errpr){

}


compoents-> DataTable table folder -> columns, 
components0>status batch
-->Reduce : 


ColumnDef type from the TanStack Table library, which is commonly used for building tables in React applications, including those built with Next.js.
TanStack Table:
This is a popular, headless UI library for React that allows you to create highly customizable tables.
ColumnDef:
This is a TypeScript type within TanStack Table that defines the structure of a column in your table. It includes properties like header, accessorKey, and cell that control how the column is displayed and what data it shows.
generic function component in React using TypeScript.

interface Column<TData, TValue> {
  header: string;
  accessor: (data: TData) => TValue;
}

interface DataTableProps<TData, TValue> {
  columns: Column<TData, TValue>[];
  data: TData[];
}


genrixcs in typescript ***

--

shad cn dial;og 
in AppointmenModel in componenys

asChild-> button acts as trigger


chnages in appointment form acording to the details
updateAppointment
what is revalidate  Path


--
sentry , monitor bugs , sms notifications

